

# Copyright (C) 2022 BROADSoftware
#
# This file is part of EzCluster
#
# EzCluster is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EzCluster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with EzCluster.  If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.


schema;node_list:
  type: seq
  required: false
  sequence:
  - type: map
    mapping:
      "openstack":
        type: map
        required: true
        mapping:
          "network": { type: str, required: false }



type: map
mapping:
  openstack:
    type: map
    required: true
    mapping:
      "project": { type: str, required: true }
      "image_default": { type: str, required: false }
      "network_default": { type: str, required: false }
      "flavor_default": { type: str, required: false }
      "security_group_default": { type: str, required: false }
      "security_groups":
        type: seq
        required: false
        sequence:
          - type: map
            mapping:
              "name": { type: str, required: true }
              "description": { type: str, required: false }
              "outbound_rules":
                type: seq
                required: false
                sequence:
                  - type: map
                    mapping:
                      "protocol": { type: str, required: true, enum: [ "all", "tcp", "udp", "icmp", "ah", "dccp", "egp", "esp", "gre", "igmp", "ospf", "pgm", "rsvp", "sctp", "udplite", "vrrp" ] }
                      "description": { type: str, required: false }
                      "from_port": { type: int, required: false }
                      "to_port": { type: int, required: false }
                      "port": { type: int, required: false }
                      "target_cidr": { type: str, required: false }
                      "target_sg": { type: str, required: false }
              "inbound_rules":
                type: seq
                required: false
                sequence:
                  - type: map
                    mapping:
                      "protocol": { type: str, required: true, enum: [ "all", "tcp", "udp", "icmp", "ah", "dccp", "egp", "esp", "gre", "igmp", "ospf", "pgm", "rsvp", "sctp", "udplite", "vrrp" ] }
                      "description": { type: str, required: false }
                      "from_port": { type: int, required: false }
                      "to_port": { type: int, required: false }
                      "port": { type: int, required: false }
                      "source_cidr": { type: str, required: false }
                      "source_sg": { type: str, required: false }
      "flavors":
        type: seq
        required: false
        sequence:
          - type: map
            mapping:
              "name": { type: str, required: true }
              "description": { type: str, required: false }
              "ram_mb": { type: int, required: true }
              "vcpus": { type: int, required: true }
              "disk_gb": { type: int, required: true }


  roles:
    type: seq
    required: true
    sequence:
      - type: map
        mapping:
          "swap_size_gb": { type: int, required: true }
          "openstack":
            type: map
            required: false
            mapping:
              "image": { type: str, required: false }
              "flavor": { type: str, required: false }
              "security_group": { type: str, required: false }
          "data_disks":
            type: seq
            required: false
            sequence:
            - type: map
              mapping:
                "size": { type: int, required: true }
                "mount": { type: str, required: false }
