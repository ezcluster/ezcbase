# Copyright (C) 2022 BROADSoftware
#
# This file is part of EzCluster
#
# EzCluster is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EzCluster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with EzCluster.  If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.


# About key pair
# The key pair is common for all clusters of the project.
# But the openstack resource key pair belong to a user. So, it will need to be created for each user.
# To avoid the need to create user's key par separatly, it is created with the cluster.
# And, as each cluster has its own tfstate, its openstack name must include the cluster name,
# to avoid clashes (Two key of same user and same name in different tfstate)
# This is done by ezcluster, by prefixing the base_name defined here with the cluster ID

type: map
mapping:
  "projects":
    type: map
    mapping:
      regex;(.*):
        type: map
        mapping:
          "auth_url": { type: str, required: true }
          "user_name": { type: str, required: true }
          "password": { type: str, required: true }
          "region": { type: str, required: true }
          "insecure": { type: bool, required: true }
          "dns_zone": { type: str, required: true }
          "key_pair":
            type: map
            required: true
            mapping:
              "base_name": { type: str, required: true}
              "public_key": { type: str, required: true}
              "local_private_key_path": { type: str, required: false} # May be not defined. Will use the default one.

  "images":
    type: map
    required: true
    mapping:
      regex;(.*):
        type: map
        mapping:
          "ssh_user": { type: str, required: true }



